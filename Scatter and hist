# Remove column name 'Store ID'
column=['Store ID ']
data.drop(column, inplace=True, axis=1)
data.head()
# Viasualization of the featurs unsing Bar plot to see if there is any missing data
msno.bar(data, figsize = (16,5))
plt.show()
# plotting the heat map graph to see the correlation of the data in graphs 
plt.figure(figsize=(9,6))
sns.heatmap(data.corr(), vmin=-1, annot=True, cmap='YlGnBu_r')
# scattered plot for items availabel and store area...
x = data[['Items_Available']]
y = data[['Store_Area']]
_ = plt.figure(figsize=(12,8))  
_ = plt.scatter(x , y)
_ = plt.xlabel('Items Available')
_ = plt.ylabel('Sales')
_ = plt.xticks(np.arange(0, 3000 , step = 100)) 
_ = plt.yticks(np.arange(0 ,3000 , step = 100))
plt.plot()
# pairplot plot of the whole feaures on the dataset 
sns.set()
sns.pairplot(data,height = 5 ,kind ='reg',diag_kind='kde')
plt.show()
# histogram plot to visulaize the distribution of all the feautures on the dataset
for column_name in data.columns:
  plt.figure(figsize=(7, 7))
  plt.title("{column_name} Distribution".format(column_name = column_name))
  sns.histplot(data[column_name], stat='density',color='blue')
  sns.kdeplot(data[column_name], color='black')
  plt.axvline(data[column_name].mean(), color='red', linestyle='--', linewidth=0.8)
  min_ylim, max_ylim = plt.ylim()
  plt.text(data[column_name].mean()*1.05, max_ylim*0.96, 'Mean (Î¼): {:.2f}'.format(data[column_name].mean()))
  plt.xlabel("Score")
  plt.ylabel("Density")
  plt.show()
